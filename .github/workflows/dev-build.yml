name: Build and Deploy to EC2 Dev

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build ComfyUI workspace-manager
        run: |
          git clone --branch dev https://github.com/11cafe/comfyui-online-serverless.git comfyui-fork
          cd comfyui-fork/web/extensions/workspace-manager
          npm install
          npm run build

      - name: Build Next.js application
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile.deploy
          push: true
          tags: xianmin12/jaaz-cloud:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest image
                        docker pull xianmin12/jaaz-cloud:dev

            # Stop and remove existing container
            docker stop jaaz-cloud-dev || true
            docker rm jaaz-cloud-dev || true

            # Run new container
            docker run -d \
              --name jaaz-cloud-dev \
              --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=production \
              xianmin12/jaaz-cloud:dev

            # Clean up unused images
            docker image prune -f
